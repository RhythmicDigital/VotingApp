{"ast":null,"code":"var _jsxFileName = \"/Users/Alex/voting-app/src/contexts/MyContext.js\";\nimport React, { createContext, Component } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MyContext = /*#__PURE__*/createContext(); // Define the base URL\n\nconst Axios = axios.create({\n  baseURL: 'http://localhost/php-login-registration-api/'\n});\n\nclass MyContextProvider extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showLogin: true,\n      isAuth: false,\n      theUser: null\n    };\n\n    this.toggleNav = () => {\n      const showLogin = !this.state.showLogin;\n      this.setState({ ...this.state,\n        showLogin\n      });\n    };\n\n    this.logoutUser = () => {\n      localStorage.removeItem('loginToken');\n      this.setState({ ...this.state,\n        isAuth: false\n      });\n    };\n\n    this.registerUser = async user => {\n      // Sending the user registration request\n      const register = await Axios.post('register.php', {\n        name: user.name,\n        email: user.email,\n        password: user.password\n      });\n      return register.data;\n    };\n\n    this.loginUser = async user => {\n      // Sending the user Login request\n      const login = await Axios.post('login.php', {\n        email: user.email,\n        password: user.password\n      });\n      return login.data;\n    };\n\n    this.isLoggedIn = async () => {\n      const loginToken = localStorage.getItem('loginToken'); // If inside the local-storage has the JWT token\n\n      if (loginToken) {\n        //Adding JWT token to axios default header\n        Axios.defaults.headers.common['Authorization'] = 'bearer ' + loginToken; // Fetching the user information\n\n        const {\n          data\n        } = await Axios.get('user-info.php'); // If user information is successfully received\n\n        if (data.success && data.user) {\n          this.setState({ ...this.state,\n            isAuth: true,\n            theUser: data.user\n          });\n        }\n      }\n    };\n\n    this.isLoggedIn();\n  } // Root State\n\n\n  render() {\n    const contextValue = {\n      rootState: this.state,\n      toggleNav: this.toggleNav,\n      isLoggedIn: this.isLoggedIn,\n      registerUser: this.registerUser,\n      loginUser: this.loginUser,\n      logoutUser: this.logoutUser,\n      addOneVote: this.addOneVote,\n      readCandidate: this.readCandidate\n    };\n    return /*#__PURE__*/_jsxDEV(MyContext.Provider, {\n      value: contextValue,\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MyContextProvider;","map":{"version":3,"sources":["/Users/Alex/voting-app/src/contexts/MyContext.js"],"names":["React","createContext","Component","axios","MyContext","Axios","create","baseURL","MyContextProvider","constructor","state","showLogin","isAuth","theUser","toggleNav","setState","logoutUser","localStorage","removeItem","registerUser","user","register","post","name","email","password","data","loginUser","login","isLoggedIn","loginToken","getItem","defaults","headers","common","get","success","render","contextValue","rootState","addOneVote","readCandidate","props","children"],"mappings":"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","sourcesContent":["import React, { createContext,Component } from \"react\";\nimport axios from 'axios'\nexport const MyContext = createContext();\n\n// Define the base URL\nconst Axios = axios.create({\n    baseURL: 'http://localhost/php-login-registration-api/',\n});\n\nclass MyContextProvider extends Component{\n    constructor(){\n        super();\n        this.isLoggedIn();\n    }\n\n    // Root State\n    state = {\n        showLogin:true,\n        isAuth:false,\n        theUser:null,\n    }\n    \n    // Toggle between Login & Signup page\n    toggleNav = () => {\n        const showLogin = !this.state.showLogin;\n        this.setState({\n            ...this.state,\n            showLogin\n        })\n    }\n\n    // On Click the Log out button\n    logoutUser = () => {\n        localStorage.removeItem('loginToken');\n        this.setState({\n            ...this.state,\n            isAuth:false\n        })\n    }\n\n    registerUser = async (user) => {\n\n        // Sending the user registration request\n        const register = await Axios.post('register.php',{\n            name:user.name,\n            email:user.email,\n            password:user.password \n        });\n\n        return register.data;\n    }\n\n\n    loginUser = async (user) => {\n\n        // Sending the user Login request\n        const login = await Axios.post('login.php',{\n            email:user.email,\n            password:user.password\n        });\n        return login.data;\n    }\n\n    // Checking user logged in or not\n    isLoggedIn = async () => {\n        const loginToken = localStorage.getItem('loginToken');\n\n        // If inside the local-storage has the JWT token\n        if(loginToken){\n\n            //Adding JWT token to axios default header\n            Axios.defaults.headers.common['Authorization'] = 'bearer '+loginToken;\n\n            // Fetching the user information\n            const {data} = await Axios.get('user-info.php');\n\n            // If user information is successfully received\n            if(data.success && data.user){\n                this.setState({\n                    ...this.state,\n                    isAuth:true,\n                    theUser:data.user\n                });\n            }\n\n        }\n    }\n\n    render(){\n        const contextValue = {\n            rootState:this.state,\n            toggleNav:this.toggleNav,\n            isLoggedIn:this.isLoggedIn,\n            registerUser:this.registerUser,\n            loginUser:this.loginUser,\n            logoutUser:this.logoutUser,\n            addOneVote:this.addOneVote,\n            readCandidate:this.readCandidate,\n\n        }\n        return(\n            <MyContext.Provider value={contextValue}>\n                {this.props.children}\n            </MyContext.Provider>\n        )\n    }\n\n}\n\nexport default MyContextProvider;"]},"metadata":{},"sourceType":"module"}